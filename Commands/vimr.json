{
  "Comment": "This command info is generated from fig",
  "Name": "vimr",
  "Description": "VimR \u2014 Neovim GUI for macOS in Swift",
  "Arguments": [
    {
      "Arguments": [
        {
          "Name": "-h",
          "Description": "Show help",
          "Aliases": [
            "--help"
          ],
          "Arguments": []
        },
        {
          "Name": "--dry-run",
          "Description": "Just print the \u0027open\u0027 command",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--cwd",
          "Description": "Set the working directory",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "CWD",
                  "Description": "CWD",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--line",
          "Description": "Go to line",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "LINE",
                  "Description": "LINE",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--wait",
          "Description": "This command line tool will exit when the corresponding UI window is closed",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--nvim",
          "Description": "All arguments except --cur-env, --line, --dry-run and --wait will be passed over to the (new) nvim instance in a new UI window",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--cur-env",
          "Description": "Use the current environment variables when launching the background neovim process. All files will be opened in a new window",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "n",
          "Description": "Open files in tabs in a new window",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "s",
          "Description": "Open files in separate windows",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": []
        }
      ],
      "Optional": true
    },
    {
      "Arguments": [
        {
          "Name": "FileSystemEntry",
          "Description": "",
          "Type": "FileSystemEntry"
        }
      ]
    }
  ],
  "CustomArgumentTemplates": [
    {
      "Name": "CustomArgument",
      "Command": "aws configure list-profiles"
    },
    {
      "Name": "string",
      "Command": "aws acm list-certificates"
    },
    {
      "Name": "string0",
      "Command": "aws acm-pca list-certificate-authorities"
    },
    {
      "Name": "string1",
      "Command": "aws iam list-roles"
    },
    {
      "Name": "string2",
      "Command": "aws amplify list-apps"
    },
    {
      "Name": "string3",
      "Command": "aws cloudformation list-stacks"
    },
    {
      "Name": "string4",
      "Command": "aws amplify list-webhooks"
    },
    {
      "Name": "list",
      "Command": "aws cloudwatch describe-alarms"
    },
    {
      "Name": "string5",
      "Command": "aws cloudwatch describe-anomaly-detectors"
    },
    {
      "Name": "list0",
      "Command": "aws cloudwatch list-dashboards"
    },
    {
      "Name": "list1",
      "Command": "aws cloudwatch describe-insight-rules"
    },
    {
      "Name": "string6",
      "Command": "aws cloudwatch list-metric-streams"
    },
    {
      "Name": "string7",
      "Command": "aws cloudwatch list-metrics"
    },
    {
      "Name": "list2",
      "Command": "aws sns list-topics"
    },
    {
      "Name": "string8",
      "Command": "aws elasticbeanstalk describe-environments"
    },
    {
      "Name": "string9",
      "Command": "aws elasticbeanstalk describe-applications"
    },
    {
      "Name": "structure",
      "Command": "aws s3 ls --page-size 1000"
    },
    {
      "Name": "string10",
      "Command": "aws elasticbeanstalk list-available-solution-stacks"
    },
    {
      "Name": "string11",
      "Command": "aws elasticbeanstalk list-platform-versions"
    },
    {
      "Name": "string12",
      "Command": "aws iam list-open-id-connect-providers"
    },
    {
      "Name": "string13",
      "Command": "aws iam list-instance-profiles --page-size 100"
    },
    {
      "Name": "string14",
      "Command": "aws iam list-groups --page-size 100"
    },
    {
      "Name": "string15",
      "Command": "aws iam list-users --page-size 100"
    },
    {
      "Name": "string16",
      "Command": "aws iam list-policies --page-size 100 --scope Local"
    },
    {
      "Name": "string17",
      "Command": "aws iam list-roles --page-size 100"
    },
    {
      "Name": "string18",
      "Command": "aws iam list-mfa-devices --page-size 100"
    },
    {
      "Name": "string19",
      "Command": "aws iam list-access-keys --page-size 100"
    },
    {
      "Name": "string20",
      "Command": "aws iam list-account-aliases --page-size 100"
    },
    {
      "Name": "string21",
      "Command": "aws iam list-saml-providers"
    },
    {
      "Name": "string22",
      "Command": "aws iam list-server-certificates --page-size 1000"
    },
    {
      "Name": "string23",
      "Command": "aws iam list-virtual-mfa-devices --page-size 100"
    },
    {
      "Name": "string24",
      "Command": "aws sts get-caller-identity"
    },
    {
      "Name": "CustomArgument0",
      "Command": "aws ec2 describe-reserved-instances --query ReservedInstances[*].ReservedInstancesId"
    },
    {
      "Name": "string25",
      "Command": "aws ec2 describe-transit-gateway-multicast-domains --query TransitGatewayMulticastDomains[*].TransitGatewayMulticastDomainId"
    },
    {
      "Name": "string26",
      "Command": "aws ec2 describe-transit-gateway-attachments --query TransitGatewayAttachments[*].TransitGatewayAttachmentId"
    },
    {
      "Name": "CustomArgument1",
      "Command": "aws ec2 describe-vpc-endpoints --query VpcEndpoints[*].SubnetIds"
    },
    {
      "Name": "string27",
      "Command": "aws ec2 describe-vpc-endpoint-services --query ServiceDetails[*].ServiceId"
    },
    {
      "Name": "list3",
      "Command": "aws ec2 describe-vpc-endpoints --query VpcEndpoints[*].VpcEndpointId"
    },
    {
      "Name": "string28",
      "Command": "aws ec2 describe-vpc-peering-connections --query VpcPeeringConnections[*].VpcPeeringConnectionId"
    },
    {
      "Name": "string29",
      "Command": "aws ec2 describe-subnets --query Subnets[*].CidrBlock"
    },
    {
      "Name": "string30",
      "Command": "aws ec2 describe-availability-zones --query AvailabilityZones[*].NetworkBorderGroup"
    },
    {
      "Name": "string31",
      "Command": "aws ec2 describe-instance-types --query InstanceTypes[*].InstanceType"
    },
    {
      "Name": "string32",
      "Command": "aws ec2 describe-vpc-endpoints --query VpcEndpoints[*].NetworkInterfaceIds"
    },
    {
      "Name": "string33",
      "Command": "aws ec2 describe-instances --query Reservations[*].Instances[].InstanceId"
    },
    {
      "Name": "string34",
      "Command": "aws ec2 describe-internet-gateways --query InternetGateways[*].InternetGatewayId"
    },
    {
      "Name": "string35",
      "Command": "aws ec2 describe-volumes --query Volumes[*].VolumeId"
    },
    {
      "Name": "string36",
      "Command": "aws ec2 describe-snapshots --query Snapshots[*].SnapshotId"
    },
    {
      "Name": "string37",
      "Command": "aws ec2 describe-images --query Images[*].ImageId"
    },
    {
      "Name": "list4",
      "Command": "aws ec2 describe-vpc-endpoints --query VpcEndpoints[*].RouteTableIds"
    },
    {
      "Name": "string38",
      "Command": "aws ec2 describe-key-pairs --query KeyPairs[*].KeyName"
    },
    {
      "Name": "list5",
      "Command": "aws ec2 describe-availability-zones --query AvailabilityZones[*].ZoneName"
    },
    {
      "Name": "list6",
      "Command": "aws ec2 describe-availability-zones --query AvailabilityZones[*].ZoneId"
    },
    {
      "Name": "list7",
      "Command": "aws ec2 describe-availability-zones --query AvailabilityZones[*].RegionName"
    },
    {
      "Name": "string39",
      "Command": "aws ec2 describe-instances --filters Name=instance-state-name,Values=running --query Reservations[*].Instances[].InstanceId"
    },
    {
      "Name": "list8",
      "Command": "aws ec2 describe-instances --filters Name=instance-state-name,Values=stopped --query Reservations[*].Instances[].InstanceId"
    },
    {
      "Name": "list9",
      "Command": "aws ecs describe-capacity-providers"
    },
    {
      "Name": "string40",
      "Command": "aws ecs list-clusters"
    },
    {
      "Name": "string41",
      "Command": "aws ecs list-task-definitions"
    },
    {
      "Name": "string42",
      "Command": "aws ecs list-services"
    },
    {
      "Name": "string43",
      "Command": "aws iam list-users"
    },
    {
      "Name": "string44",
      "Command": "aws ecs list-container-instances"
    },
    {
      "Name": "list10",
      "Command": "aws ecs list-tasks"
    },
    {
      "Name": "string45",
      "Command": "aws ecs list-attributes --target-type container-instance"
    },
    {
      "Name": "string46",
      "Command": "aws ecs list-task-definition-families"
    },
    {
      "Name": "string47",
      "Command": "aws deploy list-applications"
    },
    {
      "Name": "string48",
      "Command": "aws eks list-clusters"
    },
    {
      "Name": "list11",
      "Command": "aws kms list-keys"
    },
    {
      "Name": "string49",
      "Command": "aws eks describe-addon-versions"
    },
    {
      "Name": "string50",
      "Command": "aws s3api list-buckets"
    }
  ]
}